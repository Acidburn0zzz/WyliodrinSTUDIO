--- ../node_modules/marked/lib/marked.js	2017-01-30 00:59:34.000000000 +0100
+++ marked.js	2017-01-30 00:55:28.000000000 +0100
@@ -13,6 +13,7 @@
 var block = {
   newline: /^\n+/,
   code: /^( {4}[^\n]+\n*)+/,
+  latex: /^\$\$([\s\S]+?)\$\$(?!\$)\n*/,
   fences: noop,
   hr: /^( *[-*_]){3,} *(?:\n+|$)/,
   heading: /^ *(#{1,6}) *([^\n]+?) *#* *(?:\n+|$)/,
@@ -159,6 +160,7 @@
     , i
     , l;
 
+
   while (src) {
     // newline
     if (cap = this.rules.newline.exec(src)) {
@@ -183,6 +185,17 @@
       continue;
     }
 
+    // latex
+    if (cap = this.rules.latex.exec(src)) {
+      src = src.substring(cap[0].length);
+      // cap = cap[0].replace(/^ {4}/gm, '');
+      this.tokens.push({
+        type: 'latex',
+        text: cap[1]
+      });
+      continue;
+    }
+
     // fences (gfm)
     if (cap = this.rules.fences.exec(src)) {
       src = src.substring(cap[0].length);
@@ -440,6 +453,8 @@
     }
   }
 
+  // console.log (JSON.stringify (this.tokens));
+
   return this.tokens;
 };
 
@@ -460,7 +475,8 @@
   code: /^(`+)\s*([\s\S]*?[^`])\s*\1(?!`)/,
   br: /^ {2,}\n(?!\s*$)/,
   del: noop,
-  text: /^[\s\S]+?(?=[\\<!\[_*`]| {2,}\n|$)/
+  text: /^[\s\S]+?(?=[\\<!\[$_*`]| {2,}\n|$)/,
+  latex: /^\$\$([\s\S]+?)\$\$(?!\$)/
 };
 
 inline._inside = /(?:\[[^\]]*\]|[^\[\]]|\](?=[^\[]*\]))*/;
@@ -566,6 +582,7 @@
     , href
     , cap;
 
+    // console.log (src);
   while (src) {
     // escape
     if (cap = this.rules.escape.exec(src)) {
@@ -658,6 +675,14 @@
       continue;
     }
 
+    // latex
+    if (cap = this.rules.latex.exec(src)) {
+      // console.log (src);
+      src = src.substring(cap[0].length);
+      out += this.renderer.latex(this.output(cap[2] || cap[1]));
+      continue;
+    }
+
     // code
     if (cap = this.rules.code.exec(src)) {
       src = src.substring(cap[0].length);
@@ -854,6 +879,18 @@
   return '<em>' + text + '</em>';
 };
 
+// span level renderer
+Renderer.prototype.latex = function(text) {
+  if (this.options.latex) {
+    var out = this.options.latex(text);
+    if (out != null && out !== text) {
+      escaped = true;
+      text = out;
+    }
+  }
+  return text;
+};
+
 Renderer.prototype.codespan = function(text) {
   return '<code>' + text + '</code>';
 };
@@ -991,6 +1028,9 @@
         this.token.lang,
         this.token.escaped);
     }
+    case 'latex': {
+      return this.options.latex(this.token.text, 'div');
+    }
     case 'table': {
       var header = ''
         , body = ''
